{"version":3,"file":"bundle.js","mappings":"mBAkEoB,IAnDpB,MAQE,WAAAA,CAAYC,GACVC,KAAKC,YAAcF,EAAoBE,YACvCD,KAAKE,WAAaH,EAAoBG,WACtCF,KAAKG,WAAaJ,EAAoBI,WACtCH,KAAKI,YAAcL,EAAoBK,YACvCJ,KAAKK,OAASN,EAAoBM,OAClCL,KAAKM,KAAOP,EAAoBO,IAClC,CAEA,UAAAC,GACKP,KAAKC,YAAYO,QAClBR,KAAKC,YAAYQ,OACjBT,KAAKE,WAAWQ,UAAY,UAE5BV,KAAKC,YAAYU,QACjBX,KAAKE,WAAWQ,UAAY,OAEhC,CACA,IAAAE,GAEA,CACA,gBAAAC,GACAb,KAAKE,WAAWY,iBAAiB,SAAS,KACxCd,KAAKO,YAAY,IAEnBP,KAAKG,WAAWW,iBAAiB,SAAQ,KACvCd,KAAKC,YAAYU,QACjBX,KAAKC,YAAYc,YAAc,EAC/Bf,KAAKE,WAAWQ,UAAY,MAAM,IAEpCV,KAAKC,YAAYa,iBAAiB,cAAc,KAC9C,MAAME,EAAWC,KAAKC,MAAMlB,KAAKC,YAAYc,aAC7Cf,KAAKI,YAAYM,UAAYM,EAASG,UAAU,IAElDnB,KAAKK,OAAOS,iBAAiB,SAAQ,KACnCd,KAAKC,YAAYc,aAAe,CAAC,IAEnCf,KAAKM,KAAKQ,iBAAiB,SAAQ,KACjCd,KAAKC,YAAYc,aAAe,CAAC,GAEnC,GAGkC,CAClCd,YAAamB,SAASC,cAAc,UACpCnB,WAAWkB,SAASC,cAAc,SAClClB,WAAYiB,SAASC,cAAc,SACnCjB,YAAagB,SAASC,cAAc,aACpChB,OAAQe,SAASC,cAAc,WAC/Bf,KAAMc,SAASC,cAAc,WAGnBR,kB","sources":["webpack://cursots/./src/interfaces-classes-video/index.ts"],"sourcesContent":["interface VideoPlayerElements{\n  videoPlayer: HTMLVideoElement;\n  playButton: HTMLButtonElement;\n  stopButton: HTMLButtonElement;\n  progressBar: HTMLParagraphElement;\n  frente: HTMLButtonElement;\n  tras: HTMLButtonElement;\n}\n\ninterface VideoPlayerProtocol {\n  playToggle(): void;\n  stop(): void;\n  executarPrograma(): void;\n}\n\nexport default class VideoPlayer implements VideoPlayerProtocol{\n  private videoPlayer: HTMLVideoElement;\n  private playButton: HTMLButtonElement;\n  private stopButton: HTMLButtonElement;\n  private progressBar: HTMLParagraphElement;\n  private frente: HTMLButtonElement;\n  private tras: HTMLButtonElement;\n\n  constructor(videoPlayerElements: VideoPlayerElements){\n    this.videoPlayer = videoPlayerElements.videoPlayer;\n    this.playButton = videoPlayerElements.playButton;\n    this.stopButton = videoPlayerElements.stopButton;\n    this.progressBar = videoPlayerElements.progressBar;\n    this.frente = videoPlayerElements.frente;\n    this.tras = videoPlayerElements.tras;\n  }\n\n  playToggle(): void{\n    if(this.videoPlayer.paused){\n      this.videoPlayer.play();\n      this.playButton.innerText = 'Pause';\n    }else{\n      this.videoPlayer.pause();\n      this.playButton.innerText = 'Play'\n    }\n  }\n  stop(): void{\n  //\n  }\n  executarPrograma(): void{\n  this.playButton.addEventListener('click', () => {\n    this.playToggle();\n  });\n  this.stopButton.addEventListener('click',() => {\n    this.videoPlayer.pause();\n    this.videoPlayer.currentTime = 0;\n    this.playButton.innerText = 'Play'\n  })\n  this.videoPlayer.addEventListener('timeupdate', () => {\n    const progress = Math.trunc(this.videoPlayer.currentTime);\n    this.progressBar.innerText = progress.toString();\n  });\n  this.frente.addEventListener('click',() => {\n    this.videoPlayer.currentTime += 5\n  })\n  this.tras.addEventListener('click',() => {\n    this.videoPlayer.currentTime -= 5\n  })\n  }\n}\n\nconst videoPlayer = new VideoPlayer({\n  videoPlayer: document.querySelector('.video') as HTMLVideoElement,\n  playButton:document.querySelector('.play') as HTMLButtonElement,\n  stopButton: document.querySelector('.stop') as HTMLButtonElement,\n  progressBar: document.querySelector('.progress') as HTMLParagraphElement,\n  frente: document.querySelector('.frente') as HTMLButtonElement,\n  tras: document.querySelector('.tras') as HTMLButtonElement\n})\n\nvideoPlayer.executarPrograma();\n"],"names":["constructor","videoPlayerElements","this","videoPlayer","playButton","stopButton","progressBar","frente","tras","playToggle","paused","play","innerText","pause","stop","executarPrograma","addEventListener","currentTime","progress","Math","trunc","toString","document","querySelector"],"sourceRoot":""}