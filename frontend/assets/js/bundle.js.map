{"version":3,"file":"bundle.js","mappings":"mBAgFoB,IAlEpB,MAQE,WAAAA,CAAYC,GACVC,KAAKC,YAAcF,EAAoBE,YACvCD,KAAKE,WAAaH,EAAoBG,WACtCF,KAAKG,WAAaJ,EAAoBI,WACtCH,KAAKI,YAAcL,EAAoBK,YACvCJ,KAAKK,OAASN,EAAoBM,OAClCL,KAAKM,KAAOP,EAAoBO,IAClC,CACA,eAAAC,CAAgBC,GAEd,MAAMC,KAASD,EAAW,MACpBE,KAAWF,EAAW,KAAQ,IAC9BG,IAASH,EAAW,GAG1B,IAAII,EAAM,GASV,OAPIH,EAAM,IACRG,GAAYH,EAAM,KAAOC,EAAO,GAAK,IAAM,KAG7CE,GAAYF,EAAO,KAAOC,EAAO,GAAK,IAAM,IAC5CC,GAAO,GAAKD,EAELC,CACT,CACA,UAAAC,GACKb,KAAKC,YAAYa,QAClBd,KAAKC,YAAYc,OACjBf,KAAKE,WAAWc,UAAY,UAE5BhB,KAAKC,YAAYgB,QACjBjB,KAAKE,WAAWc,UAAY,OAEhC,CACA,gBAAAE,GACAlB,KAAKE,WAAWiB,iBAAiB,SAAS,KACxCnB,KAAKa,YAAY,IAEnBb,KAAKG,WAAWgB,iBAAiB,SAAQ,KACvCnB,KAAKC,YAAYgB,QACjBjB,KAAKC,YAAYmB,YAAc,EAC/BpB,KAAKE,WAAWc,UAAY,MAAM,IAEpChB,KAAKC,YAAYkB,iBAAiB,cAAc,KAC9C,MAAME,EAAWC,KAAKC,MAAMvB,KAAKC,YAAYmB,aAC7CpB,KAAKI,YAAYY,UAAYhB,KAAKO,gBAAgBc,GAAUG,UAAU,IAExExB,KAAKK,OAAOc,iBAAiB,SAAQ,KACnCnB,KAAKC,YAAYmB,aAAe,CAAC,IAEnCpB,KAAKM,KAAKa,iBAAiB,SAAQ,KACjCnB,KAAKC,YAAYmB,aAAe,CAAC,GAEnC,GAIkC,CAClCnB,YAAawB,SAASC,cAAc,UACpCxB,WAAWuB,SAASC,cAAc,SAClCvB,WAAYsB,SAASC,cAAc,SACnCtB,YAAaqB,SAASC,cAAc,aACpCrB,OAAQoB,SAASC,cAAc,WAC/BpB,KAAMmB,SAASC,cAAc,WAGnBR,kB","sources":["webpack://cursots/./src/interfaces-classes-video/index.ts"],"sourcesContent":["interface VideoPlayerElements{\n  videoPlayer: HTMLVideoElement;\n  playButton: HTMLButtonElement;\n  stopButton: HTMLButtonElement;\n  progressBar: HTMLParagraphElement;\n  frente: HTMLButtonElement;\n  tras: HTMLButtonElement;\n}\n\ninterface VideoPlayerProtocol {\n  playToggle(): void;\n  executarPrograma(): void;\n}\n\nexport default class VideoPlayer implements VideoPlayerProtocol{\n  private videoPlayer: HTMLVideoElement;\n  private playButton: HTMLButtonElement;\n  private stopButton: HTMLButtonElement;\n  private progressBar: HTMLParagraphElement;\n  private frente: HTMLButtonElement;\n  private tras: HTMLButtonElement;\n\n  constructor(videoPlayerElements: VideoPlayerElements){\n    this.videoPlayer = videoPlayerElements.videoPlayer;\n    this.playButton = videoPlayerElements.playButton;\n    this.stopButton = videoPlayerElements.stopButton;\n    this.progressBar = videoPlayerElements.progressBar;\n    this.frente = videoPlayerElements.frente;\n    this.tras = videoPlayerElements.tras;\n  }\n  fancyTimeFormat(duration: number) {\n    // Hours, minutes and seconds\n    const hrs = ~~(duration / 3600);\n    const mins = ~~((duration % 3600) / 60);\n    const secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    let ret = \"\";\n\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n\n    return ret;\n  }\n  playToggle(): void{\n    if(this.videoPlayer.paused){\n      this.videoPlayer.play();\n      this.playButton.innerText = 'Pause';\n    }else{\n      this.videoPlayer.pause();\n      this.playButton.innerText = 'Play'\n    }\n  }\n  executarPrograma(): void{\n  this.playButton.addEventListener('click', () => {\n    this.playToggle();\n  });\n  this.stopButton.addEventListener('click',() => {\n    this.videoPlayer.pause();\n    this.videoPlayer.currentTime = 0;\n    this.playButton.innerText = 'Play'\n  })\n  this.videoPlayer.addEventListener('timeupdate', () => {\n    const progress = Math.trunc(this.videoPlayer.currentTime);\n    this.progressBar.innerText = this.fancyTimeFormat(progress).toString()\n  });\n  this.frente.addEventListener('click',() => {\n    this.videoPlayer.currentTime += 5\n  })\n  this.tras.addEventListener('click',() => {\n    this.videoPlayer.currentTime -= 5\n  })\n  }\n}\n\n\nconst videoPlayer = new VideoPlayer({\n  videoPlayer: document.querySelector('.video') as HTMLVideoElement,\n  playButton:document.querySelector('.play') as HTMLButtonElement,\n  stopButton: document.querySelector('.stop') as HTMLButtonElement,\n  progressBar: document.querySelector('.progress') as HTMLParagraphElement,\n  frente: document.querySelector('.frente') as HTMLButtonElement,\n  tras: document.querySelector('.tras') as HTMLButtonElement\n})\n\nvideoPlayer.executarPrograma();\n"],"names":["constructor","videoPlayerElements","this","videoPlayer","playButton","stopButton","progressBar","frente","tras","fancyTimeFormat","duration","hrs","mins","secs","ret","playToggle","paused","play","innerText","pause","executarPrograma","addEventListener","currentTime","progress","Math","trunc","toString","document","querySelector"],"sourceRoot":""}